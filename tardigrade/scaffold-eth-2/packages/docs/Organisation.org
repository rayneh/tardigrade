#+title: Organisation
#+COLUMNS: %50ITEM(Task) %7TODO %14CLOCKSUM(Clock)

* [#A] Structure & Chunking [3/3]
:LOGBOOK:
CLOCK: [2023-11-29 Wed 08:26]--[2023-11-29 Wed 08:36] =>  0:10
CLOCK: [2023-11-28 Tue 14:42]--[2023-11-28 Tue 15:32] =>  0:50
CLOCK: [2023-11-28 Tue 12:42]--[2023-11-28 Tue 13:01] =>  0:19
CLOCK: [2023-11-28 Tue 12:08]--[2023-11-28 Tue 12:38] =>  0:30
CLOCK: [2023-11-28 Tue 11:45]--[2023-11-28 Tue 12:03] =>  0:18
CLOCK: [2023-11-28 Tue 09:41]--[2023-11-28 Tue 11:42] =>  2:01
:END:

** [X] Define Goal
Our goal is to create a dynamic cross chain nft.
The current Idea is the following.
We have 3 differnt Chains.
- Fuji, the Avalanche Test Chain.
- Mumbai, the Polygon Test Chain.
- Optimism Goerli, the Optimism Test Chain.
Every Chain has a Theme, f.e.
- Fuji, landscape, mountain theme
- Mumbai, Hunter x Hunter theme
- Optimism, Horn animals theme
On Every Chain there is the same NFT.
If an NFT gets transfered to another chain, it evolves.
The evolving happens in by adding specific themes to the nft.
The NFT has attributes. These attributes are changing by transfer.
The NFT is generated by a image generation which will happen Off Chain.

** [X] Chunk things
We need 4 things
- Ui / Ux, which is able to transfer cross chain and display Nft
  - A button, for cross Chain transfer
  - A div, which displays current NFT
  - A button, which switches networks
- Frontend, which implents Ui/UX
- Backend, which generates Picture
  - A event listener, which listens to transfer
  - A script which takes current attribues and generates picutres
  - A function, which adds generated picture on chain
- Smart Contracts, which are enable cross chain nft transfers
  - A transfer function
  - A cross chain simplistic state management

** [X] Write Software-Design.md
- [X] init docs
- [X] adjust structure
- [X] create picture for docs
- [X] create Software-Design.md [4/4]
  - [X] Idea
  - [X] Requirments
  - [X] User Stories
  - [X] Diagrams [3/3]
    - [X] UseCase
    - [X] Class
    - [X] Sequences

* [#A] Create State [1/1]
:LOGBOOK:
CLOCK: [2023-11-30 Thu 10:20]--[2023-11-30 Thu 11:39] =>  1:19
CLOCK: [2023-11-29 Wed 16:58]--[2023-11-29 Wed 17:52] =>  0:54
CLOCK: [2023-11-29 Wed 14:47]--[2023-11-29 Wed 16:58] =>  2:11
CLOCK: [2023-11-29 Wed 13:30]--[2023-11-29 Wed 14:28] =>  0:58
CLOCK: [2023-11-29 Wed 11:25]--[2023-11-29 Wed 13:01] =>  1:36
CLOCK: [2023-11-29 Wed 08:36]--[2023-11-29 Wed 10:35] =>  1:59
:END:
- [X] Create simple state [5/5]
  - [X] Create a counter [8/8]
    - [X] Build a counter
    - [X] Deploy a counter locally via hardhat console
    - [X] increase the number locally via hardhat conosle
    - [X] get number locally via hardhat conosle
    - [X] Write a deploy script
    - [X] Call deploy script
    - [X] Deploy contract on Mumbai via script Folder
    - [X] Verify a counter
  - [X] Send a number cross chain [1/1]
    - [X] Implent CCIP [13/13]
      - [X] Write Reciever
      - [X] Deploy Reciever
      - [X] Verify Reciever
      - [X] Write Sender
      - [X] Deploy Sender
      - [X] Verify Sender
      - [X] Write Message for sending
      - [X] Call Message for sending
      - [X] Check if message got send in CCIP Explorer
      - [X] Rewrite Reciever add is_real value
      - [X] Rewrite Sender add is_real value
      - [X] Rewrite message for calling
      - [X] check if is_real get transported
  - [X] Recieve a number corss chain [0/0]
  - [X] deploy to tardigrade.surge.sh
  - [X] send from fuji to sepolia to goerli
* [#A] Create State Machine [26/26]
:LOGBOOK:
CLOCK: [2023-12-07 Thu 16:16]--[2023-12-07 Thu 17:11] =>  0:55
CLOCK: [2023-12-07 Thu 15:16]--[2023-12-07 Thu 16:16] =>  1:00
CLOCK: [2023-12-01 Fri 22:33]--[2023-12-01 Fri 23:29] =>  0:56
CLOCK: [2023-12-01 Fri 20:35]--[2023-12-01 Fri 22:15] =>  1:40
CLOCK: [2023-12-01 Fri 17:18]--[2023-12-01 Fri 17:48] =>  0:30
CLOCK: [2023-12-01 Fri 16:48]--[2023-12-01 Fri 17:13] =>  0:25
CLOCK: [2023-12-01 Fri 16:00]--[2023-12-01 Fri 16:34] =>  0:34
CLOCK: [2023-12-01 Fri 14:37]--[2023-12-01 Fri 15:35] =>  0:58
CLOCK: [2023-11-30 Thu 16:57]--[2023-11-30 Thu 17:10] =>  0:13
CLOCK: [2023-11-30 Thu 16:50]--[2023-11-30 Thu 16:56] =>  0:06
:END:
- [X] merge sender into tardigrade
- [X] merge receiver into tardigrade
- [X] update README.md
- [X] clean up contract, rename name
- [X] add setters to get decrease of deployment mess
- [X] add locker
- [X] add natspec
- [X] chunk constructor
- [X] add open zeppelin
- [X] ERC721 Implention turns out a bit roublesome(fix later)
- [X] add comments for brainable
- [X] move to hostel, grab some food along the way
- [X] ruby style script writing setup
- [X] write link send function
- [X] set up slidev for presi
- [X] remember the workflow (restart, depcrated)
- [X] write steps down(restart, depcrated)
- [X] modify eslint(restart, depcrated)
- [X] add send function and send thingy from fuji to sepolia(doesn't work yet) (restart, depcrated)
- [X] write deploy for fuji(restart, depcrated)
- [X] write deploy for sepolia(restart, depcrated)
- [X] write deploy for goerli(restart, depcrated)
- [X] write send message from fuji to sepolia(restart, depcrated)
- [X] write send message from sepolia to goerli(restart, depcrated)
- [X] clean up(restart, depcrated)
- [X] send one cirlce around(restart, depcrated)
  - [X] add transaction from goerli back to fuji(restart, depcrated)
  - [X] add fuji function to call cross contract(restart, depcrated)
* [#A] Restart
:LOGBOOK:
CLOCK: [2023-12-09 Sat 17:17]
CLOCK: [2023-12-09 Sat 13:21]--[2023-12-09 Sat 14:13] =>  0:52
CLOCK: [2023-12-08 Fri 23:24]--[2023-12-09 Sat 00:24] =>  1:00
CLOCK: [2023-12-08 Fri 22:24]--[2023-12-08 Fri 23:17] =>  0:53
CLOCK: [2023-12-08 Fri 18:45]--[2023-12-08 Fri 20:05] =>  1:20
CLOCK: [2023-12-08 Fri 17:24]--[2023-12-08 Fri 18:18] =>  0:54
CLOCK: [2023-12-08 Fri 17:15]--[2023-12-08 Fri 17:24] =>  0:09
CLOCK: [2023-12-08 Fri 14:17]--[2023-12-08 Fri 14:51] =>  0:34
:END:
- [X] move files in playground
- [X] restart CCIP
  - [X] add Sender
  - [X] compile
  - [X] add Receiver
  - [X] compile
  - [X] deploy CCIP Reciever to Sepolia
  - [X] deploy CCIP Sender to Fuji
  - [X] send CCIP Message
  - [X] rewrite to Tardigrade_v2.sol
  - [X] write 01-deploySepolia.ts
  - [X] write 02-deployFuji.ts
  - [X] write 03-fundFujiWithLink.ts
  - [X] write 04-sendFujiSepolia.ts
  - [X] write 05-fundSepoliaWithLink.ts
  - [X] write 06-sendSepoliaFuji.ts
  - [X] test it
- [X] declare small vicotory
- [X] adjust contract, add counter
- [X] adjust scripts
- [X] add chatgpt to nvim
- [X] add docs via new plugin
- [X] food
- [X] add verify script
- [ ] ok rethink again.
